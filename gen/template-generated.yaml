AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lunchplanner V2 API
Globals:
  Api:
    Cors:
      AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
      AllowHeaders: "'Content-Type, X-Amz-Date, Authorization, X-Api-Key, X-Amz-Security-Token'"
      AllowOrigin: "'*'"
    Auth:
      DefaultAuthorizer: CognitoAuthorizer
      AddDefaultAuthorizerToCorsPreflight: false
      Authorizers:
        CognitoAuthorizer:
          UserPoolArn: arn:aws:cognito-idp:eu-central-1:535002862952:userpool/eu-central-1_FRd37FSmj
    GatewayResponses:
      DEFAULT_4XX:
        ResponseParameters:
          Headers:
            Access-Control-Allow-Origin: "'*'"
            Access-Control-Allow-Headers: "'Content-Type, X-Amz-Date, Authorization,\
              \ X-Api-Key, X-Amz-Security-Token'"
            Access-Control-Allow-Methods: "'GET, POST, PUT, DELETE, OPTIONS'"
      DEFAULT_5XX:
        ResponseParameters:
          Headers:
            Access-Control-Allow-Origin: "'*'"
            Access-Control-Allow-Headers: "'Content-Type, X-Amz-Date, Authorization,\
              \ X-Api-Key, X-Amz-Security-Token'"
            Access-Control-Allow-Methods: "'GET, POST, PUT, DELETE, OPTIONS'"
  Function:
    Timeout: 30
    Environment:
      Variables:
        STAGE: dev
Resources:
  LunchplannerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'Content-Type, X-Amz-Date, Authorization, X-Api-Key, X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:eu-central-1:535002862952:userpool/eu-central-1_FRd37FSmj
  LunchplannerUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: lunchplanner-app-sam
      UserPoolId: eu-central-1_FRd37FSmj
      GenerateSecret: false
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED
  LunchplannerV2AddMeal:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/275969516eaf4e9c151c74fc754a1efc
      Handler: addMeal.handler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /meals
            Method: post
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-Meals
  LunchplannerV2GetMeals:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/275969516eaf4e9c151c74fc754a1efc
      Handler: getMeals.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /meals
            Method: get
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-Meals
  LunchplannerV2AddIngredient:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/e371f41aed5d155b5b2e6182270e282d
      Handler: addIngredient.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /ingredients
            Method: post
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-MealIngredients
  LunchplannerV2GetIngredients:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/e371f41aed5d155b5b2e6182270e282d
      Handler: getIngredients.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /ingredients
            Method: get
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-MealIngredients
  LunchplannerV2AddShoppingList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/7c5b6360ef19979ba26c784e0082fc7c
      Handler: addShoppingList.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /shoppingLists
            Method: post
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-ShoppingLists
      - DynamoDBReadPolicy:
          TableName: LunchplannerV2-Meals
  LunchplannerV2GetShoppingLists:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/7c5b6360ef19979ba26c784e0082fc7c
      Handler: getShoppingLists.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /shoppingLists
            Method: get
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-ShoppingLists
  LunchplannerV2UpdateShoppingList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lunchplannerv2-lambdas/7c5b6360ef19979ba26c784e0082fc7c
      Handler: updateShoppingList.handler
      Runtime: nodejs18.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /shoppingLists/{listId}
            Method: put
            RestApiId:
              Ref: LunchplannerApi
      Policies:
      - DynamoDBCrudPolicy:
          TableName: LunchplannerV2-ShoppingLists
Outputs:
  ApiURL:
    Description: API Gateway endpoint URL for dev stage
    Value:
      Fn::Sub: https://${LunchplannerApi}.execute-api.${AWS::Region}.amazonaws.com/dev/
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: eu-central-1_FRd37FSmj
  UserPoolClientId:
    Description: ID of the Cognito User Pool Client
    Value:
      Ref: LunchplannerUserPoolClient
